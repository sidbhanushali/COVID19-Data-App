{"version":3,"sources":["components/Cards/Cards.module.css","coronaAPI.js","components/Cards/Cards.jsx","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","App.module.css","components/CountryPicker/CountryPicker.module.css","image-2.png"],"names":["module","exports","getData","country","a","dynamicURL","URL","axios","get","data","confirmed","recovered","deaths","lastUpdate","console","log","getDailyData","mappedData","map","arrData","total","date","reportDate","getCountryList","countries","name","Cards","value","className","CardStyles","container","Grid","justify","alignItems","spacing","item","xs","md","component","Card","cx","card","CardContent","Typography","gutterBottom","color","variant","start","end","separator","duration","Date","toDateString","Chart","useState","dailyData","setDailyData","useEffect","asyncUseEffect","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","ChartStyles","Paper","elevation","CountryPicker","handleCountryChange","Countries","setCountries","CountryPickerStyles","children","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","appData","countryData","setState","covidInfo","this","Styles","image","alt","src","logo","style","fontWeight","href","Component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.e7253065.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"confirmed\":\"Cards_confirmed__iMMyf\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import axios from 'axios'\n\n\n// DESTRUCTRE THE API CALLS \n\n\n// DATA FOR CARDS \nexport const getData  = async (country) => {\n  let URL = 'https://covid19.mathdro.id/api'\n  let dynamicURL = URL \n    if (country) {\n      dynamicURL = `${URL}/countries/${country}`\n    }\n\n    try {\n        const {data: {confirmed, recovered, deaths, lastUpdate} } =  await axios.get(dynamicURL);\n        return {confirmed,recovered,deaths,lastUpdate,}\n        \n    } catch (error) {\n      console.log(error);\n    }\n\n} \n\n// DATA FOR CHART\nexport const getDailyData = async () => {\n  try {\n        const {data} = await axios.get('https://covid19.mathdro.id/api/daily')\n        // Data is in multiple arrays so have to map it\n        const mappedData = data.map((arrData)=>({\n          confirmed: arrData.confirmed.total,\n          deaths: arrData.deaths.total,\n          date: arrData.reportDate, \n        }));\n\n        return mappedData; \n\n  } catch (error) { \n    console.log(error);\n  \n  }\n\n}\n\n\n// DATA FOR COUNTRY PICKER \n\nexport const getCountryList = async () => {\n  try {\n    const {data:{countries}} = await axios.get('https://covid19.mathdro.id/api/countries')\n\n      return countries.map((country)=>country.name)\n    \n  } catch (error) {\n    console.log(error);\n    }\n}","import React from 'react'\n\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core'\nimport CardStyles from  './Cards.module.css'\nimport CountUp from 'react-countup'\nimport cx from 'classnames'\n\n\n const Cards= ({data: {confirmed, recovered, deaths, lastUpdate} }) => {\n\nif(!confirmed){\n    return 'ðŸ¦ ...Loading...ðŸ¦ '\n}\n\n\nconsole.log(confirmed.value, recovered.value, deaths.value, lastUpdate);\n\n    return (\n        <div className={CardStyles.container}>\n            <Grid container justify='center' alignItems='center' spacing={4}>\n                    {/* Comfirmed CASES CARD  */}\n                        <Grid item xs ={12} md={3} component={Card} className={cx(CardStyles.card, CardStyles.confirmed)}>\n                            <CardContent>\n                                <Typography gutterBottom color='textSecondary'> Confirmed  </Typography>\n                                <Typography variant='h5'> \n                                <CountUp  start={0} end={confirmed.value} separator=',' duration ={2.8}/>     \n                                   </Typography>\n                                <Typography color='textSecondary'> {new Date(lastUpdate).toDateString()} </Typography>\n                                <Typography variant='body2'> Number of comfirmed COVID-19 cases </Typography>\n                            </CardContent> \n                        </Grid>\n\n\n                        {/* RECOVERED  */}\n                        <Grid item xs ={12} md={3} component={Card} className={cx(CardStyles.card, CardStyles.recovered)}>\n                            <CardContent>\n                                <Typography gutterBottom color='textSecondary'> Recovered </Typography>\n                                <Typography variant='h5'> \n                                <CountUp  start={0} end={recovered.value} separator=',' duration ={2.8}/>    \n                                 </Typography>\n                                <Typography color='textSecondary'> {new Date(lastUpdate).toDateString()} </Typography>\n                                <Typography variant='body2'> Number of recovered COVID-19 Cases </Typography>\n                            </CardContent> \n                        </Grid>\n \n                        {/* DEATHS  */}\n                        <Grid item xs ={12} md={3} component={Card} className={cx(CardStyles.card, CardStyles.deaths)}>\n                            <CardContent>\n                                <Typography gutterBottom color='textSecondary'> Deaths </Typography>\n                                <Typography variant='h5'> \n                                        <CountUp  start={0} end={deaths.value} separator=',' duration ={2.8}/>   \n                                 </Typography>\n                                <Typography color='textSecondary'> {new Date(lastUpdate).toDateString()} </Typography>\n                                <Typography variant='body2'> Number of recorded deaths from COVID-19  </Typography>\n                            </CardContent> \n                        </Grid>\n    \n           </Grid>\n        </div>\n    )\n}\n\nexport default Cards","import React, {useState, useEffect} from 'react'\nimport {getDailyData} from '../../coronaAPI'\nimport {Line, Bar} from 'react-chartjs-2'\nimport {Paper} from '@material-ui/core'\n\nimport ChartStyles from './Chart.module.css'\n\n// destructure the data object within the props destructure to get the values\n const Chart = ({data: {confirmed, deaths, recovered}, country}) => {\n// HOOKS\n        const [dailyData, setDailyData] = useState([]); \n\n        useEffect(()=>{\n               \n                const asyncUseEffect = async () => {\n                    setDailyData(await getDailyData() );\n                }\n\n            asyncUseEffect(); \n            \n        }, []);\n\n\n\n\n  // LINE CHART COMPONENT WITH DATA - REACT CHARTS JS  \n        const lineChart = (\n            // makes sure not to load the line chart without getting the data.map\n                    dailyData.length?\n                            <Line\n                            data={{\n                                labels: dailyData.map(({date})=>date),\n                                datasets: [ \n                                    {data:  dailyData.map(({confirmed})=>confirmed),\n                                    label: 'Confirmed',\n                                    borderColor:'rgba(118, 0, 187, 0.6)',\n                                    fill: true \n                                    },\n                                    \n                                    {\n                                        data:  dailyData.map(({deaths})=>deaths),\n                                        label: 'Deaths',\n                                        borderColor:'red',\n                                        backgroundColor: 'rgba(254, 0 , 0, 0.5)',\n                                        fill: true\n                                    }\n                                ]\n                            }} \n                            />:null \n\n        ); \n\n\n // BAR CHART COMPONENT WITH DATA REACT CHARTS JS \nconst barChart = (\n    confirmed?\n    <Bar\n    data={{\n        labels: ['Confirmed', 'Recovered', 'Deaths'],\n        datasets: [{label: 'People',\n         backgroundColor: [\n            'rgba(118, 0, 187, 0.6)',\n            'rgba(5, 124, 45, 0.6)',\n            'rgba(235, 0, 0, 0.6)'\n                 ],\n         data: [ confirmed.value, recovered.value, deaths.value]       \n                }]\n            }}\n    \n     options={{\n         legend: {display: false},\n         title:  {display: true, text: `Current Statistics form ${country}`}\n     }}\n     />\n    :null\n);\n\n\n\n\n//  RETURNED FUNCTION JSX \n    return (\n        <div className={ChartStyles.container}>\n            <Paper className={ChartStyles.container} elevation={6}>\n                 {country?barChart:lineChart}\n                 </Paper>\n        </div>\n    )\n}\n\nexport default Chart","import React, {useState, useEffect} from 'react'\nimport {NativeSelect, FormControl, Paper} from '@material-ui/core'\n\nimport {getCountryList} from '../../coronaAPI'\n\nimport CountryPickerStyles from './CountryPicker.module.css'\n\n const CountryPicker=({handleCountryChange}) => {\n    const [Countries, setCountries] = useState([]); \n\n    useEffect(()=>{\n            const asyncUseEffect = async()=> {\n            setCountries(await getCountryList() )\n            }\n        asyncUseEffect();\n    },[setCountries]);\n\n\n    console.log(Countries)\n\n    return (\n    <Paper className={CountryPickerStyles.component} variant='outlined' elevation={4} children={FormControl}>\n           <NativeSelect defaultValue=\"global\" onChange={(e)=>{handleCountryChange(e.target.value)}}>\n           <option value=''> Global  </option>\n            {Countries.map((country, i)=>(<option key={i} value={country}> {country} </option>))}\n           </NativeSelect>  \n    </Paper>\n    )\n}\n\nexport default CountryPicker","import React, { Component } from 'react'\nimport {getData} from './coronaAPI'\nimport {Cards, Chart, CountryPicker} from './components'\n\nimport Styles from './App.module.css'\n\nimport logo from '../src/image-2.png'\n\nclass App extends Component {\nstate = {\nappData: {},\ncountry: ''\n}\n\n\n\nasync componentDidMount(){\n    const covidInfo = await getData(); \n    this.setState({appData: covidInfo})\n\n}\n\n\nhandleCountryChange = async(country) =>{\n     //fetch data\nconst countryData = await getData(country);\n    console.log(country);\n    console.log(countryData);\n    \n    //set the state \n    this.setState({appData: countryData, country: country})\n} \n\n\n    render() {\n        \n        return (\n            <div className={Styles.container}>\n\n                <img className={Styles.image} alt='CORONAVIRUS' src={logo}/>\n                <Cards data={this.state.appData}/> \n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\n                <Chart country={this.state.country} data={this.state.appData}/>\n                    <span> \n                       \n                        <a style={{color:'white' , fontWeight: \"bold\"}} href='https://www.github.com/sidbhanushali'>  <p> &#169; Siddharth Bhanushali || Github </p>  </a>\n                    </span>\n            </div>\n        )\n    }\n}\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\n\n\nReactDOM.render(<App/>, document.querySelector('#root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"CountryPicker_component__3pzX5\"};","module.exports = __webpack_public_path__ + \"static/media/image-2.d7265326.png\";"],"sourceRoot":""}